interface MenuModalProps {
  setIsMenuOpen: (isMenuOpen: boolean) => void;
}

export default function MenuModal({ setIsMenuOpen }: MenuModalProps) {
  const navItems = [
    { name: 'About', link: '/' },
    { name: 'Track', link: '/track/front-end' },
    { name: 'People', link: '/people' },
    { name: 'Projects', link: '/projects' }
  ];

  return (
    <div className="blueBackground block md:hidden pl-[1.2rem] pr-[1.2rem] font-pp w-screen h-screen max-h-screen fixed top-0 left-0 bg-text-primary pt-[7.9rem]">
      <ul className="border-t border-surface-primary">
        {navItems.map((item) => (
          <li
            key={item.name}
            className="border-b border-surface-primary text-[3.6rem] italic text-text-invert py-[1.8rem]"
          >
            <a href={`${item.link}`} onClick={() => setIsMenuOpen(false)}>
              {item.name}
            </a>
          </li>
        ))}
        {/* <LogoIcon className="absolute bottom-[1.2rem] left-[1.2rem] w-[8rem] h-[8rem] animate-spin-logo" /> */}
        <LogoSVG />
      </ul>
    </div>
  );
}

const LogoSVG = () => (
  <svg
    className="scale-90 absolute bottom-[1.2rem] left-[1.2rem] w-[10rem] h-[10rem] animate-spin-logo"
    viewBox="0 0 101 101"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g>
      <path
        d="M100.301 50.3013C100.301 22.687 77.9155 0.30127 50.3013 0.30127C22.687 0.30127 0.30127 22.687 0.30127 50.3013C0.30127 77.9155 22.687 100.301 50.3013 100.301C77.9155 100.301 100.301 77.9155 100.301 50.3013Z"
        className="fill-text-invert"
      />
      <path
        d="M24.7451 47.2455V46.1077L26.357 45.8707C27.6528 45.6811 28.4903 45.3492 28.8696 44.8751C29.2488 44.3695 29.4384 43.5793 29.4384 42.5048V16.3833C29.4384 15.2455 29.2488 14.4554 28.8696 14.0129C28.5219 13.5388 27.716 13.2228 26.4518 13.0648L24.7451 12.8277V11.6899H40.5318V12.8277L38.6355 13.0173C36.8972 13.1754 35.7595 13.5073 35.2222 14.0129C34.6848 14.487 34.4162 15.2771 34.4162 16.3833V42.2203C34.4162 43.5477 34.6374 44.4959 35.0799 45.0648C35.554 45.6021 36.4232 45.8707 37.6873 45.8707H41.1007C42.5545 45.8707 43.8029 45.0173 44.8459 43.3107C45.9204 41.604 47.153 38.6806 48.5436 34.5403H50.1555L46.6473 47.2455H24.7451ZM52.2451 47.2455V46.1077L53.857 45.8707C55.1528 45.6811 55.9903 45.3492 56.3696 44.8751C56.7488 44.3695 56.9384 43.5793 56.9384 42.5048V16.3833C56.9384 15.2455 56.7488 14.4554 56.3696 14.0129C56.0219 13.5388 55.216 13.2228 53.9518 13.0648L52.2451 12.8277V11.6899H68.0318V12.8277L66.1355 13.0173C64.3972 13.1754 63.2595 13.5073 62.7222 14.0129C62.1848 14.487 61.9162 15.2771 61.9162 16.3833V42.2203C61.9162 43.5477 62.1374 44.4959 62.5799 45.0648C63.054 45.6021 63.9232 45.8707 65.1873 45.8707H68.6007C70.0545 45.8707 71.3029 45.0173 72.3459 43.3107C73.4204 41.604 74.653 38.6806 76.0436 34.5403H77.6555L74.1473 47.2455H52.2451ZM36.3599 89.481C33.231 89.481 30.8765 88.201 29.2962 85.6411L28.2059 89.2914H26.8785L25.7407 75.9225H27.2103C28.1269 79.6519 29.2647 82.5911 30.6236 84.7403C32.0143 86.8578 33.8315 87.9166 36.0755 87.9166C38.0034 87.9166 39.4888 87.1897 40.5318 85.7359C41.6063 84.2504 42.1436 82.5122 42.1436 80.521C42.1436 78.9092 41.7011 77.2499 40.8162 75.5433C39.9629 73.805 39.0147 72.3196 37.9718 71.087C36.9288 69.8228 35.9648 68.3848 35.0799 66.7729C34.2266 65.1295 33.7999 63.5808 33.7999 62.127C33.7999 59.4722 34.7165 57.2282 36.5496 55.3951C38.4143 53.5621 40.6266 52.6455 43.1866 52.6455C45.9678 52.6455 48.117 53.6569 49.634 55.6796L50.6296 52.8825H51.7199L52.8577 64.2129H51.4355C50.0448 57.5126 47.3426 54.1625 43.3288 54.1625C41.6854 54.1625 40.4211 54.7314 39.5362 55.8692C38.6829 56.9754 38.2562 58.3028 38.2562 59.8514C38.2562 61.3369 38.6829 62.8855 39.5362 64.4973C40.4211 66.1092 41.3851 67.5314 42.4281 68.764C43.5026 69.9966 44.4666 71.4504 45.3199 73.1255C46.2048 74.8006 46.6473 76.4124 46.6473 77.9611C46.6473 80.9951 45.6834 83.6815 43.7555 86.0203C41.8592 88.3274 39.394 89.481 36.3599 89.481ZM59.8303 89.3862C58.0604 89.3862 56.5908 88.3591 55.4214 86.3048C54.2836 84.2504 53.7147 81.7378 53.7147 78.767C53.7147 75.1956 54.4891 71.8771 56.0377 68.8114C58.0604 64.7976 60.9839 61.0998 64.8081 57.7181C68.6639 54.3363 71.9192 52.6455 74.574 52.6455C76.4387 52.6455 77.8609 53.5621 78.8407 55.3951L80.1207 52.8825H81.1162L80.8792 64.4025H79.5044C79.0303 60.7363 78.3982 58.1132 77.6081 56.5329C76.818 54.9526 75.7908 54.1625 74.5266 54.1625C71.05 54.1625 67.6051 57.6865 64.1918 64.7344L60.0199 73.4573C58.1236 77.3448 57.1755 80.5843 57.1755 83.1759C57.1755 84.5033 57.4284 85.5778 57.934 86.3996C58.4713 87.1897 59.214 87.5848 60.1622 87.5848C61.9636 87.5848 63.9389 86.3837 66.0881 83.9818C68.2372 81.5482 69.9755 78.8618 71.3029 75.9225L72.0614 74.2159C72.5039 73.3941 72.6145 72.7462 72.3933 72.2722C72.2036 71.7665 71.5715 71.5136 70.497 71.5136H67.7947L68.5533 69.9966H77.9399L78.2718 70.3759L69.454 89.2914H68.3162L69.0273 83.081H68.5533C65.3296 87.2845 62.4219 89.3862 59.8303 89.3862Z"
        className="fill-text-primary"
      />
    </g>
    <defs>
      <clipPath id="clip0_669_261">
        <rect
          width="101"
          height="101"
          className="fill-text-invert"
          transform="translate(0.30127 0.30127)"
        />
      </clipPath>
    </defs>
  </svg>
);
